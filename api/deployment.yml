# Baglebot Deployment Definition

apiVersion: apps/v1
kind: Deployment
metadata:
  name: bagelbot-deployment
  namespace: bagelbot
  labels:
    app: bagelbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bagelbot
  template:
    metadata:
      labels:
        app: bagelbot
    spec:
      containers:
        - name: bagelbot
          image: bb.cr.erwijet.com:5001/api:latest
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8080

---
# ClusterIP definition

apiVersion: v1
kind: Service
metadata:
  name: bagelbot
  namespace: bagelbot
spec:
  selector:
    app: bagelbot
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: http

---
# Ingress Definition (traefik)

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bagelbot-ingress
  namespace: bagelbot
spec:
  rules:
    - host: bagelbot.erwijet.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bagelbot
                port:
                  name: http
  tls:
    - hosts:
        - bagelbot.erwijet.com
      secretName: wildcard-tls # not defined with this spec; should be defined manually in the bagelbot ns

---
# monogdb config

# note: currently, the only service on this k8s cluster that uses mongodb is Bagelbot.
#       as such, the mongodb instance is defined within the bagelbot namespace. This may
#       change later, but it's not going to be that big of a deal tbh

# MongoDB Deployment Definition

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
  namespace: bagelbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  strategy: {}
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          args: ["--dbpath", "/data/db"]
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-creds
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-creds
                  key: password
          volumeMounts:
            - name: "mongo-data-dir"
              mountPath: "/data/db"
      volumes:
        - name: "mongo-data-dir"
          persistentVolumeClaim:
            claimName: "mongo-data"

---
# Nodeport Service Definition

apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo-nodeport-svc
  namespace: bagelbot
spec:
  ports:
    - port: 27017
      targetPort: 27017
      nodePort: 30909
  selector:
    app: mongo
  type: NodePort

---
# Persistent Volume Definition

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-data-pv
  namespace: bagelbot
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /data/mongo

---
# Persistent Volume Claim Definition

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  namespace: bagelbot
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# Default MongoDB credentials definition

apiVersion: v1
data:
  password: cGFzc3dvcmQxMjM=
  username: YWRtaW51c2Vy
kind: Secret
metadata:
  creationTimestamp: null
  name: mongo-creds
  namespace: bagelbot
